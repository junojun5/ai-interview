# AI Interview Project - Cursor Rules

## 프로젝트 개요
- Spring Boot 기반의 멀티모듈 Java 프로젝트
- 모듈: module-common, module-core, server-api
- 데이터베이스: MariaDB, Redis
- 보안: Spring Security
- 템플릿 엔진: Thymeleaf
- ORM: JPA + QueryDSL

## 코딩 스타일 및 규칙

### Java 코딩 컨벤션
- Google Java Style Guide 준수
- 들여쓰기: 4 spaces
- 라인 길이: 120자 제한
- 패키지명: 소문자, 단어 구분은 점(.)
- 클래스명: PascalCase
- 메서드명, 변수명: camelCase
- 상수명: UPPER_SNAKE_CASE

### Spring Boot 규칙
- @Component, @Service, @Repository, @Controller 어노테이션 적절히 사용
- @Autowired 대신 생성자 주입 사용
- @Transactional 어노테이션 적절한 위치에 사용
- application.yml 설정 파일 사용 권장

### JPA/QueryDSL 규칙
- Entity 클래스는 module-core에 위치
- Repository 인터페이스는 JpaRepository 상속
- QueryDSL 사용 시 Q클래스 활용
- 연관관계 매핑 시 FetchType 명시적 설정

### 보안 규칙
- 민감한 정보는 환경변수나 설정 파일로 분리
- SQL Injection 방지를 위한 PreparedStatement 사용
- XSS 방지를 위한 입력값 검증

### 테스트 규칙
- 단위 테스트: JUnit 5 사용
- 통합 테스트: @SpringBootTest 활용
- 테스트 데이터베이스: H2 사용
- Given-When-Then 패턴 적용

### 문서화 규칙
- 공개 메서드에는 JavaDoc 작성
- 복잡한 비즈니스 로직에는 주석 추가
- README.md 파일 유지보수

## 모듈별 역할
- module-common: 공통 유틸리티, 상수, 예외 클래스
- module-core: 도메인 엔티티, 리포지토리, 비즈니스 로직
- server-api: 컨트롤러, 설정, 메인 애플리케이션

## 금지사항
- System.out.println() 사용 금지 (로거 사용)
- 하드코딩된 문자열 사용 금지
- 불필요한 import 문 금지
- 사용하지 않는 변수/메서드 금지

## 권장사항
- 로깅은 SLF4J + Logback 사용
- 예외 처리는 구체적이고 의미있는 메시지 포함
- 코드 리뷰 시 성능과 보안 고려
- 단일 책임 원칙(SRP) 준수 